package CompiledContracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.0.
 */
public class AccessManagerContract extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b506040516123533803806123538339818101604052602081101561003357600080fd5b5051600080546001600160a01b0319166001600160a01b03808416919091178083556040805163d75bbaa760e01b815230600482015260248101829052600960448201526820a1a6b0b730b3b2b960b91b606482015290519190921692839263d75bbaa7926084808301939282900301818387803b1580156100b457600080fd5b505af11580156100c8573d6000803e3d6000fd5b505050505050612276806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633ac30a0d1461006757806346b890a514610096578063692bdc53146100e257806391b24b58146100ff5780639bab9cac14610125578063e4032f501461014b575b600080fd5b6100846004803603602081101561007d57600080fd5b503561018b565b60408051918252519081900360200190f35b6100ce600480360360808110156100ac57600080fd5b506001600160a01b03813516906020810135906040810135906060013561030c565b604080519115158252519081900360200190f35b610084600480360360208110156100f857600080fd5b50356113e7565b6100846004803603602081101561011557600080fd5b50356001600160a01b03166114c3565b6100846004803603602081101561013b57600080fd5b50356001600160a01b03166115a0565b610189600480360360a081101561016157600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608001356115bb565b005b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b1580156101ee57600080fd5b505afa158015610202573d6000803e3d6000fd5b505050506040513d602081101561021857600080fd5b505160408051636ef3669360e11b81526004810187905290519192506000916001600160a01b0384169163dde6cd26916024808301926020929190829003018186803b15801561026757600080fd5b505afa15801561027b573d6000803e3d6000fd5b505050506040513d602081101561029157600080fd5b5051604080516321df0da760e01b815290519192506001600160a01b038316916321df0da791600480820192602092909190829003018186803b1580156102d757600080fd5b505afa1580156102eb573d6000803e3d6000fd5b505050506040513d602081101561030157600080fd5b505195945050505050565b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b15801561036f57600080fd5b505afa158015610383573d6000803e3d6000fd5b505050506040513d602081101561039957600080fd5b505160408051636ef3669360e11b81526004810189905290519192506000916001600160a01b0384169163dde6cd26916024808301926020929190829003018186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d602081101561041257600080fd5b50516040805163bf40fac160e01b8152602060048201819052600360248301526228222160e91b604483015291519293506000926001600160a01b0387169263bf40fac19260648082019391829003018186803b15801561047257600080fd5b505afa158015610486573d6000803e3d6000fd5b505050506040513d602081101561049c57600080fd5b50516040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291519293506000926001600160a01b0388169263bf40fac19260648082019391829003018186803b1580156104fc57600080fd5b505afa158015610510573d6000803e3d6000fd5b505050506040513d602081101561052657600080fd5b505160408051635bc4fc4760e01b815260016004820152602481018a905290519192506001600160a01b03851691635bc4fc4791604480820192602092909190829003018186803b15801561057a57600080fd5b505afa15801561058e573d6000803e3d6000fd5b505050506040513d60208110156105a457600080fd5b50511561067e5760408051633115e48760e11b81526001600160a01b038c81166004830152915160009284169163622bc90e916024808301926020929190829003018186803b1580156105f657600080fd5b505afa15801561060a573d6000803e3d6000fd5b505050506040513d602081101561062057600080fd5b50516001600160a01b0316141561067e576040805162461bcd60e51b815260206004820152601a60248201527f5468652075736572206973206e6f742072656769737465726564000000000000604482015290519081900360640190fd5b826001600160a01b0316635bc4fc476002896040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156106cb57600080fd5b505afa1580156106df573d6000803e3d6000fd5b505050506040513d60208110156106f557600080fd5b50511561082a576000826001600160a01b031663dac3c76960026040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561074357600080fd5b505afa158015610757573d6000803e3d6000fd5b505050506040513d602081101561076d57600080fd5b505160408051636209d7fb60e11b8152600481018c9052602481018b905290519192506001600160a01b0383169163c413aff691604480820192602092909190829003018186803b1580156107c157600080fd5b505afa1580156107d5573d6000803e3d6000fd5b505050506040513d60208110156107eb57600080fd5b50516108285760405162461bcd60e51b815260040180806020018281038252602c815260200180612216602c913960400191505060405180910390fd5b505b826001600160a01b0316635bc4fc476003896040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561087757600080fd5b505afa15801561088b573d6000803e3d6000fd5b505050506040513d60208110156108a157600080fd5b5051156109f5576000826001600160a01b031663dac3c76960036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156108ef57600080fd5b505afa158015610903573d6000803e3d6000fd5b505050506040513d602081101561091957600080fd5b505160408051631a6c187360e01b81526001600160a01b038e81166004830152602482018e9052604482018c9052915192935090831691631a6c187391606480820192602092909190829003018186803b15801561097657600080fd5b505afa15801561098a573d6000803e3d6000fd5b505050506040513d60208110156109a057600080fd5b50516109f3576040805162461bcd60e51b815260206004820181905260248201527f74686520726567697374726174696f6e2074696d652069732065787069726564604482015290519081900360640190fd5b505b826001600160a01b0316635bc4fc476004896040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610a4257600080fd5b505afa158015610a56573d6000803e3d6000fd5b505050506040513d6020811015610a6c57600080fd5b50518015610ae95750826001600160a01b0316637c3f5921886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610ab957600080fd5b505afa158015610acd573d6000803e3d6000fd5b505050506040513d6020811015610ae357600080fd5b50516001145b15610bea576000826001600160a01b031663dac3c76960046040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610b3557600080fd5b505afa158015610b49573d6000803e3d6000fd5b505050506040513d6020811015610b5f57600080fd5b505160408051635cc9f42160e01b8152600481018d9052602481018b905290519192506001600160a01b03831691635cc9f42191604480820192602092909190829003018186803b158015610bb357600080fd5b505afa158015610bc7573d6000803e3d6000fd5b505050506040513d6020811015610bdd57600080fd5b5051610be857600080fd5b505b826001600160a01b0316635bc4fc476004896040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d6020811015610c6157600080fd5b50518015610cde5750826001600160a01b0316637c3f5921886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610cae57600080fd5b505afa158015610cc2573d6000803e3d6000fd5b505050506040513d6020811015610cd857600080fd5b50516002145b15610de8576000826001600160a01b031663dac3c76960046040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610d2a57600080fd5b505afa158015610d3e573d6000803e3d6000fd5b505050506040513d6020811015610d5457600080fd5b5051604080516331256e7360e01b81526001600160a01b038e81166004830152602482018e9052604482018c90529151929350908316916331256e7391606480820192602092909190829003018186803b158015610db157600080fd5b505afa158015610dc5573d6000803e3d6000fd5b505050506040513d6020811015610ddb57600080fd5b5051610de657600080fd5b505b826001600160a01b0316635bc4fc476005896040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610e3557600080fd5b505afa158015610e49573d6000803e3d6000fd5b505050506040513d6020811015610e5f57600080fd5b505115610fa5576000816001600160a01b031663622bc90e8c6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610ebe57600080fd5b505afa158015610ed2573d6000803e3d6000fd5b505050506040513d6020811015610ee857600080fd5b5051604080516305364a1d60e01b8152600481018d9052602481018b905290519192506001600160a01b038316916305364a1d91604480820192602092909190829003018186803b158015610f3c57600080fd5b505afa158015610f50573d6000803e3d6000fd5b505050506040513d6020811015610f6657600080fd5b5051610fa35760405162461bcd60e51b815260040180806020018281038252602a8152602001806121ec602a913960400191505060405180910390fd5b505b826001600160a01b0316637c3f5921886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610fe957600080fd5b505afa158015610ffd573d6000803e3d6000fd5b505050506040513d602081101561101357600080fd5b505160021415611204576000816001600160a01b031663622bc90e8c6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561107557600080fd5b505afa158015611089573d6000803e3d6000fd5b505050506040513d602081101561109f57600080fd5b50516040805163e87ec79d60e01b8152600481018b905290519192506001600160a01b0386169163e87ec79d91602480820192602092909190829003018186803b1580156110ec57600080fd5b505afa158015611100573d6000803e3d6000fd5b505050506040513d602081101561111657600080fd5b50516001600160a01b03808d166000908152600160209081526040918290208054909401909355805163e87ec79d60e01b8152600481018c905290518483169363979c86f19389169263e87ec79d9260248083019392829003018186803b15801561118057600080fd5b505afa158015611194573d6000803e3d6000fd5b505050506040513d60208110156111aa57600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b1580156111ea57600080fd5b505af11580156111fe573d6000803e3d6000fd5b50505050505b826001600160a01b0316637c3f5921886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561124857600080fd5b505afa15801561125c573d6000803e3d6000fd5b505050506040513d602081101561127257600080fd5b5051600114156113d757826001600160a01b031663a121a6c2886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156112c057600080fd5b505afa1580156112d4573d6000803e3d6000fd5b505050506040513d60208110156112ea57600080fd5b50516001600160a01b03808c1660009081526001602090815260409182902080549094019093558051635090d36160e11b8152600481018b9052905191861692639f474b2092849263a121a6c2926024808301939192829003018186803b15801561135457600080fd5b505afa158015611368573d6000803e3d6000fd5b505050506040513d602081101561137e57600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b1580156113be57600080fd5b505af11580156113d2573d6000803e3d6000fd5b505050505b5060019998505050505050505050565b600080546040805163bf40fac160e01b81526020600482018190526005602483015264292728222160d91b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b15801561144a57600080fd5b505afa15801561145e573d6000803e3d6000fd5b505050506040513d602081101561147457600080fd5b505160408051632ff6312d60e01b81526004810187905290519192506000916001600160a01b03841691632ff6312d916024808301926020929190829003018186803b15801561026757600080fd5b600080546040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b15801561152457600080fd5b505afa158015611538573d6000803e3d6000fd5b505050506040513d602081101561154e57600080fd5b505160408051633115e48760e11b81526001600160a01b03878116600483015291519293506000929184169163622bc90e91602480820192602092909190829003018186803b15801561026757600080fd5b6001600160a01b031660009081526001602052604090205490565b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b039093169392849263bf40fac19260648082019391829003018186803b15801561161d57600080fd5b505afa158015611631573d6000803e3d6000fd5b505050506040513d602081101561164757600080fd5b505160408051636ef3669360e11b81526004810189905290519192506000916001600160a01b0384169163dde6cd26916024808301926020929190829003018186803b15801561169657600080fd5b505afa1580156116aa573d6000803e3d6000fd5b505050506040513d60208110156116c057600080fd5b50516040805163bf40fac160e01b81526020600482018190526005602483015264292728222160d91b604483015291519293506000926001600160a01b0387169263bf40fac19260648082019391829003018186803b15801561172257600080fd5b505afa158015611736573d6000803e3d6000fd5b505050506040513d602081101561174c57600080fd5b505160408051632ff6312d60e01b8152600481018a905290519192506000916001600160a01b03841691632ff6312d916024808301926020929190829003018186803b15801561179b57600080fd5b505afa1580156117af573d6000803e3d6000fd5b505050506040513d60208110156117c557600080fd5b50516040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291519293506000926001600160a01b0389169263bf40fac19260648082019391829003018186803b15801561182557600080fd5b505afa158015611839573d6000803e3d6000fd5b505050506040513d602081101561184f57600080fd5b505160408051633115e48760e11b81526001600160a01b038e8116600483015291519293506000929184169163622bc90e91602480820192602092909190829003018186803b1580156118a157600080fd5b505afa1580156118b5573d6000803e3d6000fd5b505050506040513d60208110156118cb57600080fd5b505160408051637c3f592160e01b8152600481018c905290519192506001600160a01b03871691637c3f592191602480820192602092909190829003018186803b15801561191857600080fd5b505afa15801561192c573d6000803e3d6000fd5b505050506040513d602081101561194257600080fd5b50516002141561208157600088866001600160a01b031663574a9a348c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561199357600080fd5b505afa1580156119a7573d6000803e3d6000fd5b505050506040513d60208110156119bd57600080fd5b50516040805163e87ec79d60e01b8152600481018e905290519290910292506001600160a01b0388169163e87ec79d91602480820192602092909190829003018186803b158015611a0d57600080fd5b505afa158015611a21573d6000803e3d6000fd5b505050506040513d6020811015611a3757600080fd5b50518112611d5e57816001600160a01b031663979c86f1876001600160a01b031663e87ec79d8d6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611a9257600080fd5b505afa158015611aa6573d6000803e3d6000fd5b505050506040513d6020811015611abc57600080fd5b5051604080516001600160e01b031960e085901b168152918503600483015251602480830192600092919082900301818387803b158015611afc57600080fd5b505af1158015611b10573d6000803e3d6000fd5b50505050856001600160a01b03166325752b05600a886001600160a01b0316634bfbf7738e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611b6957600080fd5b505afa158015611b7d573d6000803e3d6000fd5b505050506040513d6020811015611b9357600080fd5b505181611b9c57fe5b0560010383026040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611bd857600080fd5b505af1158015611bec573d6000803e3d6000fd5b50505050836001600160a01b03166351b5ed4c600a886001600160a01b0316634bfbf7738e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611c4557600080fd5b505afa158015611c59573d6000803e3d6000fd5b505050506040513d6020811015611c6f57600080fd5b505181611c7857fe5b0583026040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611cb157600080fd5b505af1158015611cc5573d6000803e3d6000fd5b50505050856001600160a01b031663e87ec79d8b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611d0d57600080fd5b505afa158015611d21573d6000803e3d6000fd5b505050506040513d6020811015611d3757600080fd5b50516001600160a01b038e166000908152600160205260409020805491909103905561207b565b816001600160a01b031663507966e082886001600160a01b031663e87ec79d8e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611db257600080fd5b505afa158015611dc6573d6000803e3d6000fd5b505050506040513d6020811015611ddc57600080fd5b5051604080516001600160e01b031960e086901b16815292909103600483015251602480830192600092919082900301818387803b158015611e1d57600080fd5b505af1158015611e31573d6000803e3d6000fd5b50505050856001600160a01b03166325752b05600a886001600160a01b0316634bfbf7738e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611e8a57600080fd5b505afa158015611e9e573d6000803e3d6000fd5b505050506040513d6020811015611eb457600080fd5b505181611ebd57fe5b0560010383026040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611ef957600080fd5b505af1158015611f0d573d6000803e3d6000fd5b50505050836001600160a01b03166351b5ed4c600a886001600160a01b0316634bfbf7738e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611f6657600080fd5b505afa158015611f7a573d6000803e3d6000fd5b505050506040513d6020811015611f9057600080fd5b505181611f9957fe5b0583026040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611fd257600080fd5b505af1158015611fe6573d6000803e3d6000fd5b50505050856001600160a01b031663e87ec79d8b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561202e57600080fd5b505afa158015612042573d6000803e3d6000fd5b505050506040513d602081101561205857600080fd5b50516001600160a01b038e16600090815260016020526040902080549190910390555b506121dd565b846001600160a01b031663a121a6c28a6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156120c557600080fd5b505afa1580156120d9573d6000803e3d6000fd5b505050506040513d60208110156120ef57600080fd5b50516001600160a01b03808e166000908152600160209081526040918290208054949094039093558051635090d36160e11b8152600481018d90529051868316936351b5ed4c938a169263a121a6c29260248083019392829003018186803b15801561215a57600080fd5b505afa15801561216e573d6000803e3d6000fd5b505050506040513d602081101561218457600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b1580156121c457600080fd5b505af11580156121d8573d6000803e3d6000fd5b505050505b50505050505050505050505056fe5468652075736572206973206e6f74207265676973746572656420696e20746869732073657276696365596f7572204e5020646f65736e7420737570706f7274207468697320736572766963652070726f7669646572a265627a7a72315820574229bd0787d0f70b09cb194d8b8997225a374a65b818f73ba4284fcc8430bf64736f6c63430005100032";

    public static final String FUNC_GETNPTOKEN = "getNPToken";

    public static final String FUNC_GETSPTOKEN = "getSPToken";

    public static final String FUNC_GETUSERSTOREDTOKEN = "getUserStoredToken";

    public static final String FUNC_GETUSERTOKEN = "getUserToken";

    public static final String FUNC_TERMINATIONANDPAYMENT = "terminationAndPayment";

    public static final String FUNC_USERVALIDATION = "userValidation";

    @Deprecated
    protected AccessManagerContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected AccessManagerContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected AccessManagerContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected AccessManagerContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<BigInteger> getNPToken(BigInteger _npCode) {
        final Function function = new Function(FUNC_GETNPTOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int256(_npCode)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getSPToken(BigInteger _spCode) {
        final Function function = new Function(FUNC_GETSPTOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int256(_spCode)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getUserStoredToken(String _ue) {
        final Function function = new Function(FUNC_GETUSERSTOREDTOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _ue)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getUserToken(String _user) {
        final Function function = new Function(FUNC_GETUSERTOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> terminationAndPayment(String _userAddress, BigInteger _providerCode, BigInteger _networkProviderCode, BigInteger _serviceCode, BigInteger _usage) {
        final Function function = new Function(
                FUNC_TERMINATIONANDPAYMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userAddress), 
                new org.web3j.abi.datatypes.generated.Int256(_providerCode), 
                new org.web3j.abi.datatypes.generated.Int256(_networkProviderCode), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCode), 
                new org.web3j.abi.datatypes.generated.Int256(_usage)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> userValidation(String _userAddress, BigInteger _providerCode, BigInteger _networkProviderCode, BigInteger _serviceCode) {
        final Function function = new Function(
                FUNC_USERVALIDATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userAddress), 
                new org.web3j.abi.datatypes.generated.Int256(_providerCode), 
                new org.web3j.abi.datatypes.generated.Int256(_networkProviderCode), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCode)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static AccessManagerContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new AccessManagerContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static AccessManagerContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new AccessManagerContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static AccessManagerContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new AccessManagerContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static AccessManagerContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new AccessManagerContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}

package CompiledContracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.0.
 */
public class AccessManagerContract extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b50604051611d1a380380611d1a8339818101604052602081101561003357600080fd5b5051600080546001600160a01b0319166001600160a01b03808416919091178083556040805163d75bbaa760e01b815230600482015260248101829052600960448201526820a1a6b0b730b3b2b960b91b60648201529051919092169263d75bbaa7926084808201939182900301818387803b1580156100b257600080fd5b505af11580156100c6573d6000803e3d6000fd5b5050505050611c40806100da6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b48a5cf31461003b578063fc255c431461008f575b600080fd5b61007b600480360360a081101561005157600080fd5b506001600160a01b03813516906020810135906040810135906060810135906080013515156100d7565b604080519115158252519081900360200190f35b6100d5600480360360c08110156100a557600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608081013515159060a001356110c3565b005b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b6044830152915184936001600160a01b03169263bf40fac19260648082019391829003018186803b15801561013657600080fd5b505afa15801561014a573d6000803e3d6000fd5b505050506040513d602081101561016057600080fd5b505160408051636ef3669360e11b81526004810189905290519192506000916001600160a01b0384169163dde6cd26916024808301926020929190829003018186803b1580156101af57600080fd5b505afa1580156101c3573d6000803e3d6000fd5b505050506040513d60208110156101d957600080fd5b5051600080546040805163bf40fac160e01b8152602060048201819052600360248301526228222160e91b6044830152915194955092936001600160a01b039092169263bf40fac19260648083019392829003018186803b15801561023d57600080fd5b505afa158015610251573d6000803e3d6000fd5b505050506040513d602081101561026757600080fd5b505160408051635bc4fc4760e01b8152600160048201526024810189905290519192506001600160a01b03841691635bc4fc4791604480820192602092909190829003018186803b1580156102bb57600080fd5b505afa1580156102cf573d6000803e3d6000fd5b505050506040513d60208110156102e557600080fd5b50511561042b576000816001600160a01b031663dac3c76960016040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561033357600080fd5b505afa158015610347573d6000803e3d6000fd5b505050506040513d602081101561035d57600080fd5b505160408051630b1fba9160e11b81526001600160a01b038d8116600483015291519293509083169163163f752291602480820192602092909190829003018186803b1580156103ac57600080fd5b505afa1580156103c0573d6000803e3d6000fd5b505050506040513d60208110156103d657600080fd5b5051610429576040805162461bcd60e51b815260206004820152601a60248201527f5468652075736572206973206e6f742072656769737465726564000000000000604482015290519081900360640190fd5b505b816001600160a01b0316635bc4fc476002886040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561047857600080fd5b505afa15801561048c573d6000803e3d6000fd5b505050506040513d60208110156104a257600080fd5b5051156105d7576000816001600160a01b031663dac3c76960026040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156104f057600080fd5b505afa158015610504573d6000803e3d6000fd5b505050506040513d602081101561051a57600080fd5b505160408051636209d7fb60e11b8152600481018b9052602481018a905290519192506001600160a01b0383169163c413aff691604480820192602092909190829003018186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d602081101561059857600080fd5b50516105d55760405162461bcd60e51b815260040180806020018281038252602c815260200180611be0602c913960400191505060405180910390fd5b505b816001600160a01b0316635bc4fc476003886040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561062457600080fd5b505afa158015610638573d6000803e3d6000fd5b505050506040513d602081101561064e57600080fd5b5051156107a2576000816001600160a01b031663dac3c76960036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d60208110156106c657600080fd5b505160408051631a6c187360e01b81526001600160a01b038d81166004830152602482018d9052604482018b9052915192935090831691631a6c187391606480820192602092909190829003018186803b15801561072357600080fd5b505afa158015610737573d6000803e3d6000fd5b505050506040513d602081101561074d57600080fd5b50516107a0576040805162461bcd60e51b815260206004820181905260248201527f74686520726567697374726174696f6e2074696d652069732065787069726564604482015290519081900360640190fd5b505b816001600160a01b0316635bc4fc476004886040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156107ef57600080fd5b505afa158015610803573d6000803e3d6000fd5b505050506040513d602081101561081957600080fd5b505180156108245750845b15610925576000816001600160a01b031663dac3c76960046040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561087057600080fd5b505afa158015610884573d6000803e3d6000fd5b505050506040513d602081101561089a57600080fd5b505160408051635cc9f42160e01b8152600481018c9052602481018a905290519192506001600160a01b03831691635cc9f42191604480820192602092909190829003018186803b1580156108ee57600080fd5b505afa158015610902573d6000803e3d6000fd5b505050506040513d602081101561091857600080fd5b505161092357600080fd5b505b816001600160a01b0316635bc4fc476004886040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561097257600080fd5b505afa158015610986573d6000803e3d6000fd5b505050506040513d602081101561099c57600080fd5b505180156109a8575084155b15610ab2576000816001600160a01b031663dac3c76960046040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156109f457600080fd5b505afa158015610a08573d6000803e3d6000fd5b505050506040513d6020811015610a1e57600080fd5b5051604080516331256e7360e01b81526001600160a01b038d81166004830152602482018d9052604482018b90529151929350908316916331256e7391606480820192602092909190829003018186803b158015610a7b57600080fd5b505afa158015610a8f573d6000803e3d6000fd5b505050506040513d6020811015610aa557600080fd5b5051610ab057600080fd5b505b816001600160a01b0316635bc4fc476005886040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d6020811015610b2957600080fd5b505115610c67576000816001600160a01b031663dac3c76960056040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610b7757600080fd5b505afa158015610b8b573d6000803e3d6000fd5b505050506040513d6020811015610ba157600080fd5b505160408051635689778560e11b81526001600160a01b038d81166004830152602482018d9052604482018b905291519293509083169163ad12ef0a91606480820192602092909190829003018186803b158015610bfe57600080fd5b505afa158015610c12573d6000803e3d6000fd5b505050506040513d6020811015610c2857600080fd5b5051610c655760405162461bcd60e51b815260040180806020018281038252602a815260200180611bb6602a913960400191505060405180910390fd5b505b816001600160a01b0316635bc4fc476004886040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610cb457600080fd5b505afa158015610cc8573d6000803e3d6000fd5b505050506040513d6020811015610cde57600080fd5b50518015610cea575084155b15610f5357600080546040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291516001600160a01b039093169263bf40fac192606480840193919291829003018186803b158015610d4e57600080fd5b505afa158015610d62573d6000803e3d6000fd5b505050506040513d6020811015610d7857600080fd5b505160408051633115e48760e11b81526001600160a01b038d8116600483015291519293506000929184169163622bc90e91602480820192602092909190829003018186803b158015610dca57600080fd5b505afa158015610dde573d6000803e3d6000fd5b505050506040513d6020811015610df457600080fd5b5051604080516321df0da760e01b815290519192506001600160a01b038316916321df0da791600480820192602092909190829003018186803b158015610e3a57600080fd5b505afa158015610e4e573d6000803e3d6000fd5b505050506040513d6020811015610e6457600080fd5b50516001600160a01b03808d166000908152600160209081526040918290208054909401909355805163e87ec79d60e01b8152600481018c905290518483169363979c86f19389169263e87ec79d9260248083019392829003018186803b158015610ece57600080fd5b505afa158015610ee2573d6000803e3d6000fd5b505050506040513d6020811015610ef857600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b158015610f3857600080fd5b505af1158015610f4c573d6000803e3d6000fd5b5050505050505b84156110b457816001600160a01b031663a121a6c2876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610f9d57600080fd5b505afa158015610fb1573d6000803e3d6000fd5b505050506040513d6020811015610fc757600080fd5b50516001600160a01b03808b1660009081526001602090815260409182902080549094019093558051635090d36160e11b8152600481018a9052905191851692639f474b2092849263a121a6c2926024808301939192829003018186803b15801561103157600080fd5b505afa158015611045573d6000803e3d6000fd5b505050506040513d602081101561105b57600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b15801561109b57600080fd5b505af11580156110af573d6000803e3d6000fd5b505050505b50600198975050505050505050565b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b039093169263bf40fac192606480840193919291829003018186803b15801561112457600080fd5b505afa158015611138573d6000803e3d6000fd5b505050506040513d602081101561114e57600080fd5b505160408051636ef3669360e11b81526004810189905290519192506000916001600160a01b0384169163dde6cd26916024808301926020929190829003018186803b15801561119d57600080fd5b505afa1580156111b1573d6000803e3d6000fd5b505050506040513d60208110156111c757600080fd5b5051600080546040805163bf40fac160e01b81526020600482018190526005602483015264292728222160d91b6044830152915194955092936001600160a01b039092169263bf40fac19260648083019392829003018186803b15801561122d57600080fd5b505afa158015611241573d6000803e3d6000fd5b505050506040513d602081101561125757600080fd5b505160408051632ff6312d60e01b8152600481018a905290519192506000916001600160a01b03841691632ff6312d916024808301926020929190829003018186803b1580156112a657600080fd5b505afa1580156112ba573d6000803e3d6000fd5b505050506040513d60208110156112d057600080fd5b5051905085611a4357600080546040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291516001600160a01b039093169263bf40fac192606480840193919291829003018186803b15801561133857600080fd5b505afa15801561134c573d6000803e3d6000fd5b505050506040513d602081101561136257600080fd5b505160408051633115e48760e11b81526001600160a01b038e8116600483015291519293506000929184169163622bc90e91602480820192602092909190829003018186803b1580156113b457600080fd5b505afa1580156113c8573d6000803e3d6000fd5b505050506040513d60208110156113de57600080fd5b5051604080516315d2a68d60e21b8152600481018c9052905191925060009189916001600160a01b0389169163574a9a3491602480820192602092909190829003018186803b15801561143057600080fd5b505afa158015611444573d6000803e3d6000fd5b505050506040513d602081101561145a57600080fd5b50516040805163e87ec79d60e01b8152600481018e905290519290910292506001600160a01b0388169163e87ec79d91602480820192602092909190829003018186803b1580156114aa57600080fd5b505afa1580156114be573d6000803e3d6000fd5b505050506040513d60208110156114d457600080fd5b5051604080516321df0da760e01b815290516001600160a01b038516916321df0da7916004808301926020929190829003018186803b15801561151657600080fd5b505afa15801561152a573d6000803e3d6000fd5b505050506040513d602081101561154057600080fd5b5051018113156115d957600160008e6001600160a01b03166001600160a01b0316815260200190815260200160002054826001600160a01b03166321df0da76040518163ffffffff1660e01b815260040160206040518083038186803b1580156115a957600080fd5b505afa1580156115bd573d6000803e3d6000fd5b505050506040513d60208110156115d357600080fd5b50510190505b856001600160a01b03166325752b05876001600160a01b0316634bfbf7738d6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561162c57600080fd5b505afa158015611640573d6000803e3d6000fd5b505050506040513d602081101561165657600080fd5b5051604080516001600160e01b031960e085901b1681526001929092038502600483015251602480830192600092919082900301818387803b15801561169b57600080fd5b505af11580156116af573d6000803e3d6000fd5b50505050836001600160a01b03166351b5ed4c876001600160a01b0316634bfbf7738d6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561170657600080fd5b505afa15801561171a573d6000803e3d6000fd5b505050506040513d602081101561173057600080fd5b5051604080516001600160e01b031960e085901b168152918502600483015251602480830192600092919082900301818387803b15801561177057600080fd5b505af1158015611784573d6000803e3d6000fd5b50505050856001600160a01b031663e87ec79d8b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156117cc57600080fd5b505afa1580156117e0573d6000803e3d6000fd5b505050506040513d60208110156117f657600080fd5b50516001600160a01b03808f16600090815260016020908152604091829020805494909403909355805163e87ec79d60e01b8152600481018e905290519189169263e87ec79d92602480840193829003018186803b15801561185757600080fd5b505afa15801561186b573d6000803e3d6000fd5b505050506040513d602081101561188157600080fd5b5051811261196357816001600160a01b031663979c86f1876001600160a01b031663e87ec79d8d6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156118dc57600080fd5b505afa1580156118f0573d6000803e3d6000fd5b505050506040513d602081101561190657600080fd5b5051604080516001600160e01b031960e085901b168152918503600483015251602480830192600092919082900301818387803b15801561194657600080fd5b505af115801561195a573d6000803e3d6000fd5b50505050611a3b565b816001600160a01b031663507966e082886001600160a01b031663e87ec79d8e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156119b757600080fd5b505afa1580156119cb573d6000803e3d6000fd5b505050506040513d60208110156119e157600080fd5b5051604080516001600160e01b031960e086901b16815292909103600483015251602480830192600092919082900301818387803b158015611a2257600080fd5b505af1158015611a36573d6000803e3d6000fd5b505050505b505050611ba9565b806001600160a01b03166351b5ed4c846001600160a01b031663a121a6c28a6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611a9657600080fd5b505afa158015611aaa573d6000803e3d6000fd5b505050506040513d6020811015611ac057600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b158015611b0057600080fd5b505af1158015611b14573d6000803e3d6000fd5b50505050826001600160a01b031663a121a6c2886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611b5c57600080fd5b505afa158015611b70573d6000803e3d6000fd5b505050506040513d6020811015611b8657600080fd5b50516001600160a01b038b16600090815260016020526040902080549190910390555b5050505050505050505056fe5468652075736572206973206e6f74207265676973746572656420696e20746869732073657276696365596f7572204e5020646f65736e7420737570706f7274207468697320736572766963652070726f7669646572a265627a7a72315820b1a4c64d38f753bf76e49a9a6c500bd03f43e40a81cf0ddeb791dc19b9403e1764736f6c63430005100032";

    public static final String FUNC_TERMINATIONANDPAYMENT = "terminationAndPayment";

    public static final String FUNC_USERVALIDATION = "userValidation";

    @Deprecated
    protected AccessManagerContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected AccessManagerContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected AccessManagerContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected AccessManagerContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> terminationAndPayment(String _userAddress, BigInteger _providerCode, BigInteger _networkProviderCode, BigInteger _serviceCode, Boolean _isPrepaid, BigInteger _usage) {
        final Function function = new Function(
                FUNC_TERMINATIONANDPAYMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userAddress), 
                new org.web3j.abi.datatypes.generated.Int256(_providerCode), 
                new org.web3j.abi.datatypes.generated.Int256(_networkProviderCode), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCode), 
                new org.web3j.abi.datatypes.Bool(_isPrepaid), 
                new org.web3j.abi.datatypes.generated.Int256(_usage)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> userValidation(String _userAddress, BigInteger _providerCode, BigInteger _networkProviderCode, BigInteger _serviceCode, Boolean _isPrepaid) {
        final Function function = new Function(
                FUNC_USERVALIDATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userAddress), 
                new org.web3j.abi.datatypes.generated.Int256(_providerCode), 
                new org.web3j.abi.datatypes.generated.Int256(_networkProviderCode), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCode), 
                new org.web3j.abi.datatypes.Bool(_isPrepaid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static AccessManagerContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new AccessManagerContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static AccessManagerContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new AccessManagerContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static AccessManagerContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new AccessManagerContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static AccessManagerContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new AccessManagerContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<AccessManagerContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(AccessManagerContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}

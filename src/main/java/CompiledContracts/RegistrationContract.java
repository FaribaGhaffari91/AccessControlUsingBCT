package CompiledContracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.0.
 */
public class RegistrationContract extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b506040516126d83803806126d88339818101604052602081101561003357600080fd5b5051600080546001600160a01b0319166001600160a01b03808416919091178083556040805163d75bbaa760e01b815230600482015260248101829052600b60448201526a149959d0dbdb9d1c9858dd60aa1b606482015290519190921692839263d75bbaa7926084808301939282900301818387803b1580156100b657600080fd5b505af11580156100ca573d6000803e3d6000fd5b505060006002819055600355505050506125ef806100e96000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637d5224d3116100665780637d5224d3146101b557806391b24b58146101db578063a204c14514610201578063f1a4684814610227578063f7e8deb8146102695761009e565b80630194fbff146100a35780633ac30a0d146100ef5780634ebd5f911461011e57806355db9e2814610160578063692bdc5314610198575b600080fd5b6100ed600480360360e08110156100b957600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a08101359060c0013561029b565b005b61010c6004803603602081101561010557600080fd5b5035610438565b60408051918252519081900360200190f35b6101446004803603602081101561013457600080fd5b50356001600160a01b03166105b9565b604080516001600160a01b039092168252519081900360200190f35b6100ed6004803603608081101561017657600080fd5b506001600160a01b0381351690602081013590604081013590606001356108ce565b61010c600480360360208110156101ae57600080fd5b5035610b38565b610144600480360360208110156101cb57600080fd5b50356001600160a01b0316610c14565b61010c600480360360208110156101f157600080fd5b50356001600160a01b0316610e5b565b6101446004803603602081101561021757600080fd5b50356001600160a01b0316610f38565b6100ed600480360360a081101561023d57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060800135611161565b6100ed6004803603606081101561027f57600080fd5b50803590602081013590604001356001600160a01b03166116bc565b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b039093169392849263bf40fac19260648082019391829003018186803b1580156102fd57600080fd5b505afa158015610311573d6000803e3d6000fd5b505050506040513d602081101561032757600080fd5b50516040805163cace74b360e01b81526001600160a01b038c8116600483015291519293506000929184169163cace74b391602480820192602092909190829003018186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d60208110156103a357600080fd5b505160408051637d8411af60e01b8152600481018c9052602481018b9052604481018a9052606481018990526084810188905260a4810187905290519192506001600160a01b03831691637d8411af9160c48082019260009290919082900301818387803b15801561041457600080fd5b505af1158015610428573d6000803e3d6000fd5b5050505050505050505050505050565b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b505160408051636ef3669360e11b81526004810187905290519192506000916001600160a01b0384169163dde6cd26916024808301926020929190829003018186803b15801561051457600080fd5b505afa158015610528573d6000803e3d6000fd5b505050506040513d602081101561053e57600080fd5b5051604080516321df0da760e01b815290519192506001600160a01b038316916321df0da791600480820192602092909190829003018186803b15801561058457600080fd5b505afa158015610598573d6000803e3d6000fd5b505050506040513d60208110156105ae57600080fd5b505195945050505050565b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b15801561061c57600080fd5b505afa158015610630573d6000803e3d6000fd5b505050506040513d602081101561064657600080fd5b505160408051630fbb590b60e21b81526001600160a01b038781166004830152915192935090831691633eed642c91602480820192602092909190829003018186803b15801561069557600080fd5b505afa1580156106a9573d6000803e3d6000fd5b505050506040513d60208110156106bf57600080fd5b505115610713576040805162461bcd60e51b815260206004820181905260248201527f5468697320736572766963652070726f7669646572206578697374732e2e2e2e604482015290519081900360640190fd5b60028054600101908190556000805460405191926001600160a01b039091169133919061073f90611839565b6001600160a01b039384168152919092166020820152604080820192909252905190819003606001906000f08015801561077d573d6000803e3d6000fd5b509050806001600160a01b03166325752b05613a986040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107c857600080fd5b505af11580156107dc573d6000803e3d6000fd5b50505050816001600160a01b0316633f7d7df1600254876040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b15801561084257600080fd5b505af1158015610856573d6000803e3d6000fd5b50506040805163d7e5fbf360e01b81526001600160a01b03898116600483015285811660248301529151918616935063d7e5fbf3925060448082019260009290919082900301818387803b1580156108ad57600080fd5b505af11580156108c1573d6000803e3d6000fd5b5092979650505050505050565b600080546040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291516001600160a01b039093169392849263bf40fac19260648082019391829003018186803b15801561092e57600080fd5b505afa158015610942573d6000803e3d6000fd5b505050506040513d602081101561095857600080fd5b505160408051633115e48760e11b81526001600160a01b03898116600483015291519293506000929184169163622bc90e91602480820192602092909190829003018186803b1580156109aa57600080fd5b505afa1580156109be573d6000803e3d6000fd5b505050506040513d60208110156109d457600080fd5b50516001600160a01b03161415610a32576040805162461bcd60e51b815260206004820152601a60248201527f5468652075736572206973206e6f742072656769737465726564000000000000604482015290519081900360640190fd5b6000816001600160a01b031663622bc90e886040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610a8a57600080fd5b505afa158015610a9e573d6000803e3d6000fd5b505050506040513d6020811015610ab457600080fd5b50516040805163a330de2b60e01b81526004810189905260248101889052604481018790526002606482015290519192506001600160a01b0383169163a330de2b9160848082019260009290919082900301818387803b158015610b1757600080fd5b505af1158015610b2b573d6000803e3d6000fd5b5050505050505050505050565b600080546040805163bf40fac160e01b81526020600482018190526005602483015264292728222160d91b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b158015610b9b57600080fd5b505afa158015610baf573d6000803e3d6000fd5b505050506040513d6020811015610bc557600080fd5b505160408051632ff6312d60e01b81526004810187905290519192506000916001600160a01b03841691632ff6312d916024808301926020929190829003018186803b15801561051457600080fd5b600080546040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b158015610c7557600080fd5b505afa158015610c89573d6000803e3d6000fd5b505050506040513d6020811015610c9f57600080fd5b505160408051631f5bdf5d60e01b81526001600160a01b038781166004830152915192935090831691631f5bdf5d91602480820192602092909190829003018186803b158015610cee57600080fd5b505afa158015610d02573d6000803e3d6000fd5b505050506040513d6020811015610d1857600080fd5b505115610d565760405162461bcd60e51b815260040180806020018281038252602281526020018061256a6022913960400191505060405180910390fd5b600080546040516001600160a01b03909116903390610d7490611846565b6001600160a01b03928316815291166020820152604080519182900301906000f080158015610da7573d6000803e3d6000fd5b509050806001600160a01b031663507966e06127106040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610df257600080fd5b505af1158015610e06573d6000803e3d6000fd5b50506040805163196fe85960e01b81523360048201526001600160a01b0385811660248301529151918616935063196fe859925060448082019260009290919082900301818387803b1580156108ad57600080fd5b600080546040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b158015610ebc57600080fd5b505afa158015610ed0573d6000803e3d6000fd5b505050506040513d6020811015610ee657600080fd5b505160408051633115e48760e11b81526001600160a01b03878116600483015291519293506000929184169163622bc90e91602480820192602092909190829003018186803b15801561051457600080fd5b600080546040805163bf40fac160e01b81526020600482018190526005602483015264292728222160d91b604483015291516001600160a01b03909316928492849263bf40fac19260648083019392829003018186803b158015610f9b57600080fd5b505afa158015610faf573d6000803e3d6000fd5b505050506040513d6020811015610fc557600080fd5b50516040805163f434744f60e01b81526001600160a01b03878116600483015291519293509083169163f434744f91602480820192602092909190829003018186803b15801561101457600080fd5b505afa158015611028573d6000803e3d6000fd5b505050506040513d602081101561103e57600080fd5b505115611092576040805162461bcd60e51b815260206004820181905260248201527f54686973206e6574776f726b2070726f7669646572206578697374732e2e2e2e604482015290519081900360640190fd5b60038054600101908190556000805460405191926001600160a01b03909116913391906110be90611853565b6001600160a01b039384168152919092166020820152604080820192909252905190819003606001906000f0801580156110fc573d6000803e3d6000fd5b509050816001600160a01b0316633f7d7df1600354876040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b15801561084257600080fd5b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b039093169392849263bf40fac19260648082019391829003018186803b1580156111c357600080fd5b505afa1580156111d7573d6000803e3d6000fd5b505050506040513d60208110156111ed57600080fd5b50516040805163bf40fac160e01b815260206004808301829052602483015263292aa22160e11b604483015291519293506000926001600160a01b0386169263bf40fac19260648082019391829003018186803b15801561124d57600080fd5b505afa158015611261573d6000803e3d6000fd5b505050506040513d602081101561127757600080fd5b505160408051633115e48760e11b81526001600160a01b038b8116600483015291519293506000929184169163622bc90e91602480820192602092909190829003018186803b1580156112c957600080fd5b505afa1580156112dd573d6000803e3d6000fd5b505050506040513d60208110156112f357600080fd5b50516001600160a01b03161415611351576040805162461bcd60e51b815260206004820152601a60248201527f5468652075736572206973206e6f742072656769737465726564000000000000604482015290519081900360640190fd5b6000826001600160a01b031663cace74b3896040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156113a957600080fd5b505afa1580156113bd573d6000803e3d6000fd5b505050506040513d60208110156113d357600080fd5b505160408051633115e48760e11b81526001600160a01b038c8116600483015291519293506000929185169163622bc90e91602480820192602092909190829003018186803b15801561142557600080fd5b505afa158015611439573d6000803e3d6000fd5b505050506040513d602081101561144f57600080fd5b50516040805163589050ad60e11b8152600481018a9052905191925060009188916001600160a01b0386169163b120a15a91602480820192602092909190829003018186803b1580156114a157600080fd5b505afa1580156114b5573d6000803e3d6000fd5b505050506040513d60208110156114cb57600080fd5b5051604080516321df0da760e01b815290519290910292506001600160a01b038416916321df0da791600480820192602092909190829003018186803b15801561151457600080fd5b505afa158015611528573d6000803e3d6000fd5b505050506040513d602081101561153e57600080fd5b505181131561157e5760405162461bcd60e51b815260040180806020018281038252602f81526020018061258c602f913960400191505060405180910390fd5b6040805163a330de2b60e01b8152600481018b9052602481018a9052604481018990526001606482015290516001600160a01b0384169163a330de2b91608480830192600092919082900301818387803b1580156115db57600080fd5b505af11580156115ef573d6000803e3d6000fd5b50505050816001600160a01b031663979c86f1826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561163957600080fd5b505af115801561164d573d6000803e3d6000fd5b50505050826001600160a01b03166325752b05826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561169757600080fd5b505af11580156116ab573d6000803e3d6000fd5b505050505050505050505050505050565b600080546040805163bf40fac160e01b815260206004820181905260056024830152642929a8222160d91b604483015291516001600160a01b039093169392849263bf40fac19260648082019391829003018186803b15801561171e57600080fd5b505afa158015611732573d6000803e3d6000fd5b505050506040513d602081101561174857600080fd5b50516040805163cace74b360e01b81526001600160a01b03868116600483015291519293506000929184169163cace74b391602480820192602092909190829003018186803b15801561179a57600080fd5b505afa1580156117ae573d6000803e3d6000fd5b505050506040513d60208110156117c457600080fd5b505160408051630406591760e31b8152600481018990526024810188905290519192506001600160a01b03831691632032c8b89160448082019260009290919082900301818387803b15801561181957600080fd5b505af115801561182d573d6000803e3d6000fd5b50505050505050505050565b6104e28061186183390190565b61054580611d4383390190565b6102e2806122888339019056fe608060405234801561001057600080fd5b506040516104e23803806104e28339818101604052606081101561003357600080fd5b5080516020820151604090920151600080546001600160a01b031990811633178255600180546001600160a01b03958616908316179055600280549490951693169290921790925560039190915560055561044f806100936000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635bc4fc471161008c5780639f474b20116100665780639f474b20146101f9578063a121a6c214610216578063b120a15a14610233578063e87ec79d14610250576100cf565b80635bc4fc471461016a5780637c3f5921146101a15780637d8411af146101be576100cf565b80632032c8b8146100d457806321df0da7146100f957806325752b051461011357806341c18af3146101135780634bfbf77314610130578063574a9a341461014d575b600080fd5b6100f7600480360360408110156100ea57600080fd5b508035906020013561026d565b005b610101610292565b60408051918252519081900360200190f35b6100f76004803603602081101561012957600080fd5b5035610298565b6101016004803603602081101561014657600080fd5b50356102a3565b6101016004803603602081101561016357600080fd5b50356102b8565b61018d6004803603604081101561018057600080fd5b50803590602001356102ce565b604080519115158252519081900360200190f35b610101600480360360208110156101b757600080fd5b50356102ed565b6100f7600480360360c08110156101d457600080fd5b5080359060208101359060408101359060608101359060808101359060a00135610302565b6100f76004803603602081101561020f57600080fd5b5035610392565b6101016004803603602081101561022c57600080fd5b503561039e565b6101016004803603602081101561024957600080fd5b50356103b3565b6101016004803603602081101561026657600080fd5b50356103c8565b600090815260076020908152604080832093835292905220805460ff19166001179055565b60065490565b600680549091019055565b60009081526004602052604090206006015490565b6000908152600460208190526040909120015490565b6000908152600760209081526040808320938352929052205460ff1690565b60009081526004602052604090206001015490565b6005805460010190556103136103dd565b506040805160e0810182526005805480835260208084019a8b52838501998a52606084019889526080840197885260a0840196875260c084019586526000918252600490819052939020915182559751600182015595516002870155935160038601559151928401929092559051928201929092559051600690910155565b60068054919091039055565b60009081526004602052604090206003015490565b60009081526004602052604090206002015490565b60009081526004602052604090206005015490565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152509056fea265627a7a72315820dbfff7e5ae4628c0a83b4af7a947be7aea04dc659d500cd233e1753a8eecc35064736f6c63430005100032608060405234801561001057600080fd5b506040516105453803806105458339818101604052604081101561003357600080fd5b508051602091820151600180546001600160a01b0319166001600160a01b0380851691909117918290556040805163bf40fac160e01b815260048101879052600b60248201526a149959d0dbdb9d1c9858dd60aa1b60448201529051949593949290911692839263bf40fac1926064808201939291829003018186803b1580156100bc57600080fd5b505afa1580156100d0573d6000803e3d6000fd5b505050506040513d60208110156100e657600080fd5b50516001600160a01b0316331461012e5760405162461bcd60e51b815260040180806020018281038252603781526020018061050e6037913960400191505060405180910390fd5b5060008055600380546001600160a01b03909216610100026001600160a81b0319909216919091179055506103a6806101686000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806341c18af31161005b57806341c18af31461012c578063507966e014610149578063979c86f114610166578063a330de2b1461018357610088565b806305364a1d1461008d5780630f248d38146100c457806321df0da7146100ef57806322fa871814610109575b600080fd5b6100b0600480360360408110156100a357600080fd5b50803590602001356101b2565b604080519115158252519081900360200190f35b6100ed600480360360608110156100da57600080fd5b50803590602081013590604001356101d5565b005b6100f761024d565b60408051918252519081900360200190f35b6100f76004803603604081101561011f57600080fd5b5080359060200135610253565b6100ed6004803603602081101561014257600080fd5b5035610271565b6100ed6004803603602081101561015f57600080fd5b503561028d565b6100ed6004803603602081101561017c57600080fd5b5035610298565b6100ed6004803603608081101561019957600080fd5b50803590602081013590604081013590606001356102a4565b600091825260026020908152604080842092845291905290206004015460ff1690565b6000838152600260208181526040808420868552909152909120015442106102215760008381526002602081815260408084208685529091529091204262015180840201910155610248565b60008381526002602081815260408084208685529091529091200180546201518083020190555b505050565b60005490565b60009182526002602081815260408085209385529290529120015490565b60035461010090046001600160a01b0316331461028d57600080fd5b600080549091019055565b60008054919091039055565b6102ac610339565b506040805160c081018252858152602080820186815262015180860242018385019081526060840196875260016080850181815260a0860197885260009a8b526002808652878c209a8c52999094529490982092518355519282019290925594519385019390935590516003840155905160048301805460ff191691151591909117905551600590910155565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160001515815260200160008152509056fea265627a7a723158201affa6c768e678dad6572280437bc8cdfbdb0f547c9b287eb19fc1ee2bab740964736f6c634300051000325468697320636f6e7472616374206f6e6c792063616e206265206465706c6f79656420627920526567697374657220436f6e7472616374608060405234801561001057600080fd5b506040516102e23803806102e28339818101604052606081101561003357600080fd5b5080516020820151604090920151600080546001600160a01b039384166001600160a01b031991821617909155600380549390941692169190911790915560045561025f806100836000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806321df0da71461005157806351b5ed4c1461006b578063ba6a037a1461008a578063f74a3d6e146100a7575b600080fd5b6100596100d8565b60408051918252519081900360200190f35b6100886004803603602081101561008157600080fd5b50356100de565b005b610088600480360360208110156100a057600080fd5b50356101c0565b6100c4600480360360208110156100bd57600080fd5b50356101db565b604080519115158252519081900360200190f35b60015490565b6000546040805163bf40fac160e01b8152602060048201819052600960248301526820a1a6b0b730b3b2b960b91b604483015291516001600160a01b0390931692839263bf40fac19260648082019391829003018186803b15801561014257600080fd5b505afa158015610156573d6000803e3d6000fd5b505050506040513d602081101561016c57600080fd5b50516001600160a01b031633146101b45760405162461bcd60e51b815260040180806020018281038252603a8152602001806101f1603a913960400191505060405180910390fd5b50600180549091019055565b6000908152600260205260409020805460ff19166001179055565b60009081526002602052604090205460ff169056fe4f6e6c7920616363657373206d616e6167657220636f6e74726163742063616e206164642062616c616e636520696e204e50206163636f756e74a265627a7a72315820f4c665ce20d2893f1e6b05939c8b6cf9017f3c75aea090b91202c3b74bbc46c164736f6c6343000510003254686973207573657220697320616c726561647920726567697374657265642e2e2e5573657220646f65736e7420686176652073756666696369656e7420746f6b656e20696e206865722077616c6c6574a265627a7a72315820a2dafaa86764086ccea61c8ba231aca4811ab335e2a5641416495404d335da2364736f6c63430005100032";

    public static final String FUNC_ADDNEWSERVICEINSP = "addNewServiceInSP";

    public static final String FUNC_ADDPOLICYINSERVICE = "addPolicyInService";

    public static final String FUNC_GETNPTOKEN = "getNPToken";

    public static final String FUNC_GETSPTOKEN = "getSPToken";

    public static final String FUNC_GETUSERTOKEN = "getUserToken";

    public static final String FUNC_REGISTERNEWNP = "registerNewNP";

    public static final String FUNC_REGISTERNEWUSER = "registerNewUser";

    public static final String FUNC_REGISTERSERVICEPROVIDER = "registerServiceProvider";

    public static final String FUNC_REGISTERTOSERVICEPAYASYOUGO = "registerToServicePayAsYouGo";

    public static final String FUNC_REGISTERTOSERVICEPREPAID = "registerToServicePrePaid";

    @Deprecated
    protected RegistrationContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected RegistrationContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected RegistrationContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected RegistrationContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> addNewServiceInSP(String _spAddress, BigInteger _serviceType, BigInteger _serviceCostforUser, BigInteger _operatorFee, BigInteger _costForUser, BigInteger _minPrice, BigInteger _operatorShare) {
        final Function function = new Function(
                FUNC_ADDNEWSERVICEINSP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _spAddress), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceType), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCostforUser), 
                new org.web3j.abi.datatypes.generated.Int256(_operatorFee), 
                new org.web3j.abi.datatypes.generated.Int256(_costForUser), 
                new org.web3j.abi.datatypes.generated.Int256(_minPrice), 
                new org.web3j.abi.datatypes.generated.Int256(_operatorShare)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addPolicyInService(BigInteger _title, BigInteger _serviceCode, String _spAddress) {
        final Function function = new Function(
                FUNC_ADDPOLICYINSERVICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int256(_title), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCode), 
                new org.web3j.abi.datatypes.Address(160, _spAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getNPToken(BigInteger _npCode) {
        final Function function = new Function(FUNC_GETNPTOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int256(_npCode)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getSPToken(BigInteger _spCode) {
        final Function function = new Function(FUNC_GETSPTOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int256(_spCode)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getUserToken(String _user) {
        final Function function = new Function(FUNC_GETUSERTOKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> registerNewNP(String _npAddress) {
        final Function function = new Function(
                FUNC_REGISTERNEWNP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _npAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registerNewUser(String _user) {
        final Function function = new Function(
                FUNC_REGISTERNEWUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registerServiceProvider(String _sp) {
        final Function function = new Function(
                FUNC_REGISTERSERVICEPROVIDER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _sp)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registerToServicePayAsYouGo(String _user, BigInteger _serviceProviderCode, BigInteger _serviceCode, BigInteger timeOrData) {
        final Function function = new Function(
                FUNC_REGISTERTOSERVICEPAYASYOUGO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceProviderCode), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCode), 
                new org.web3j.abi.datatypes.generated.Uint256(timeOrData)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registerToServicePrePaid(String _user, String _sp, BigInteger _serviceProviderCode, BigInteger _serviceCode, BigInteger timeOrData) {
        final Function function = new Function(
                FUNC_REGISTERTOSERVICEPREPAID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _user), 
                new org.web3j.abi.datatypes.Address(160, _sp), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceProviderCode), 
                new org.web3j.abi.datatypes.generated.Int256(_serviceCode), 
                new org.web3j.abi.datatypes.generated.Uint256(timeOrData)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static RegistrationContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new RegistrationContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static RegistrationContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new RegistrationContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static RegistrationContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new RegistrationContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static RegistrationContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new RegistrationContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<RegistrationContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(RegistrationContract.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<RegistrationContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(RegistrationContract.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<RegistrationContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(RegistrationContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<RegistrationContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _addressBook) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addressBook)));
        return deployRemoteCall(RegistrationContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
